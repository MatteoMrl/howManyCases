<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
	<link rel="stylesheet" href="/css/index.css">
	<script src="https://kit.fontawesome.com/e449369ffe.js" crossorigin="anonymous"></script>

</head>
<body>
	<div id="nav">
			<i class="fas fa-virus"></i> HOWMANY<span style="color: red;">CASES</span>
	</div>

	<div id="changeCountry"> 
		<h4 id="changeCountry-text">change country <i id="chevron" class="fas fa-chevron-down"></i></h4>
		<div id="countryList"  class="changeDisactive">
			{{#each countryNames}}
				<h5 class="countrySelectors" id={{this.ISO2}}>{{this.Country}}</h5>
			{{/each}}
		</div>
	</div>

	<div id="container">

		<div id="leftAside">
			<h1>CHOOSE THE <span style="color: red;">TYPE</span> OF CHART</h1>
			<ul id="changeGraphic">
				<li class="active"><i class="fas fa-chart-pie"></i> Today cases</li>
				<li><i class="fas fa-chart-line"></i> Total cases</li>
				<li><i class="fas fa-chart-line"></i> Confirmed cases</li>
				<li><i class="fas fa-chart-line"></i> Deaths cases</li>
				<li><i class="fas fa-chart-line"></i> Recovered cases</li>
			</ul>
		</div>
		
		<div id="main">

			<h1 id="countryName">Country: <span style="color: red; text-transform: uppercase;">{{countryData.name}}</span></h1>

			<canvas class="active" id="doughnutChart" style="width: 500px; height: 500px"></canvas>
			<canvas id="totalChart" class="disactive" style="width: 400px; height: 400px"></canvas>
			<canvas id="deathsChart" class="disactive" style="width: 400px; height: 400px"></canvas>
			<canvas id="recoveredChart" class="disactive" style="width: 400px; height: 400px"></canvas>
			<canvas id="confirmedChart" class="disactive" style="width: 400px; height: 400px"></canvas>

		</div>

		<div id="rightAside">
			<h1><span style="color: red;">TODAY</span>'S DATA</h1>
			<ul id="todayData">
				<li id="newConfirmed" class="confirmed">
					New confirmed: <i class="fas fa-caret-up"></i> {{countryData.newConfirmed}}
				</li>
				<li id="confirmedRate" class="confirmed">
					Confirmed rate: <i class="fas fa-caret-up"></i> {{countryData.confirmedRate}}%
				</li>
				<li id="newRecovered" class="recovered">
					New recovered: <i class="fas fa-caret-up"></i> {{countryData.newRecovered}}
				</li>
				<li id="recoveredRate" class="recovered">
					Recovered rate: <i class="fas fa-caret-up"></i> {{countryData.recoveredRate}}%
				</li>
				<li id="newDeaths" class="deaths">
					New deaths: <i class="fas fa-caret-up"></i> {{countryData.newDeaths}}
				</li>
				<li id="deathsRate" class="deaths">
					Deaths rate: <i class="fas fa-caret-up"></i> {{countryData.deathsRate}}%
				</li>
			</ul>
			
		</div>
	
	</div>
		
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js" integrity="sha512-s+xg36jbIujB2S2VKfpGmlC3T5V2TF3lY48DX7u2r9XzGzgPsa6wTpOQA7J9iffvdeBN0q9tKzRxVxw1JviZPg==" crossorigin="anonymous"></script>
<script>

	const changeCountry = document.querySelector("#changeCountry-text")
	const chevron = document.querySelector("#chevron")
	const countryList = document.querySelector('#countryList')
	const countrySelectors = document.querySelectorAll(".countrySelectors");
	const allCanvas = document.querySelectorAll('canvas');
	const changeGraphic = document.querySelector("#changeGraphic")
	const graphics = changeGraphic.querySelectorAll('li');
    var doughnutChart = document.getElementById('doughnutChart');
    var totalLinesChart = document.getElementById('totalChart');
    var deathsChart = document.getElementById('deathsChart');
    var recoveredChart = document.getElementById('recoveredChart');
	var confirmedChart = document.getElementById('confirmedChart');
	var countryName = document.querySelector("#countryName");
	const newConfirmedData = document.querySelector('#newConfirmed');
	const confirmedRateData = document.querySelector('#confirmedRate');
	const newRecoveredData = document.querySelector('#newRecovered');
	const recoveredRateData = document.querySelector('#recoveredRate');
	const newDeathsData = document.querySelector('#newDeaths');
	const deathsRateData = document.querySelector('#deathsRate');

	const options = {
				responsive: true,
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Month'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Value'
						}
					}]
				},
				legend: {
					labels: {
						fontColor: "white",
						fontSize: 18
					}
            	}
			}

    var myPieChart = new Chart(doughnutChart, {
        type: 'doughnut',
        data: {
            labels: [
                'New Confirmed',
                'New Deaths',
                'New Recovered'
            ],
            datasets: [{
                data: [{{countryData.newConfirmed}}, {{countryData.newDeaths}}, {{countryData.newRecovered}}],
                backgroundColor: [
                'rgb(36, 36, 64)',
                'rgb(133, 150, 167)',
                'rgb(167, 204, 204)'
                ],
				borderColor: ['rgb(36, 36, 64,0.5)',
                'rgba(133, 150, 167, 0.5)',
                'rgba(167, 204, 204, 0.5)'],
				borderWidth: 0,
				hoverBorderWidth: 8
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
			legend: {
                labels: {
                    fontColor: "white",
                    fontSize: 18
                }
            }
        }
    });

	updatePieChart = ({newConfirmed, newDeaths, newRecovered}) => {
		myPieChart.data.datasets[0].data = [newConfirmed, newDeaths, newRecovered];
		myPieChart.update();
	}

    var myLineChart = new Chart(totalLinesChart, {
			type: 'line',
			data: {
				labels: [{{monthData.daysList}}],
				datasets: [{
					label: 'Deaths',
                    backgroundColor: 'rgb(133, 150, 167)',
					borderColor: 'rgb(133, 150, 167)',
					data: [
						{{monthData.deathsList}}
					],
					fill: false
				}, {
					label: 'Recovered',
					fill: false,
					backgroundColor: 'rgb(167, 204, 204)',
					borderColor: 'rgb(167, 204, 204)',
					data: [
						{{monthData.recoveredList}}
					],
				}, {
					label: 'Confirmed',
					fill: false,
					backgroundColor: 'rgb(36, 36, 64)',
					borderColor: 'rgb(36, 36, 64)',
					data: [
						{{monthData.confirmedList}}
					],
				}]
			},
			options
	});

	updateLineChart = ({deathsList, recoveredList, confirmedList}) => {
		myLineChart.data.datasets[0].data = deathsList
		myLineChart.data.datasets[1].data = recoveredList
		myLineChart.data.datasets[2].data = confirmedList
		myLineChart.update();
	}
	
    var myDeathsChart = new Chart(deathsChart, {
			type: 'line',
			data: {
				labels: [{{monthData.daysList}}],
				datasets: [{
					label: 'Deaths',
                    backgroundColor: 'rgb(133, 150, 167)',
					borderColor: 'rgb(133, 150, 167)',
					data: [
						{{monthData.deathsList}}
					],
					fill: false
				}]
			},
			options
		});
    var myRecoveredChart = new Chart(recoveredChart, {
			type: 'line',
			data: {
				labels: [{{monthData.daysList}}],
				datasets: [{
					label: 'Recovered',
                    backgroundColor: 'rgb(167, 204, 204)',
					borderColor: 'rgb(167, 204, 204)',
					data: [
						{{monthData.recoveredList}}
					],
					fill: false
				}]
			},
			options
		});
	var myConfirmedChart = new Chart(confirmedChart, {
			type: 'line',
			data: {
				labels: [{{monthData.daysList}}],
				datasets: [{
					label: 'Recovered',
                    backgroundColor: 'rgb(167, 204, 204)',
					borderColor: 'rgb(167, 204, 204)',
					data: [
						{{monthData.confirmedList}}
					],
					fill: false
				}]
			},
			options
		});

	updateSpecificChart = (chart, dataList) => {
		chart.data.datasets[0].data = dataList;
		chart.update();
	}

	updateData = ({name, newConfirmed, confirmedRate, newRecovered, recoveredRate, newDeaths, deathsRate}) => {
		console.log(name)
		countryName.innerHTML = `Country: <span style="color: red; text-transform: uppercase;">${name}</span>`;
		newConfirmedData.innerHTML = `New confirmed: ${newConfirmed}`;
		confirmedRateData.innerHTML = `Confirmed rate: ${confirmedRate}%`;
		newRecoveredData.innerHTML = `New recovered: ${newRecovered}`;
		recoveredRateData.innerHTML = `Recovered rate: ${recoveredRate}%`;
		newDeathsData.innerHTML = `New deaths: ${newDeaths}`;
		deathsRateData.innerHTML = `Deaths rate: ${deathsRate}%`
	}

	removeActive = () => {
		graphics.forEach(graphic => {
				if(graphic.className === "active"){
					graphic.classList.remove("active");
				}
			})
	}

	newActive = graphic => {
		graphic.classList.add("active");
	}

	changeDisplayGraphic = activeIndex => {

		allCanvas.forEach((canvas, index) => {
			if(index == activeIndex){
				canvas.classList.remove("disactive")
				canvas.classList.add("active")
			} else {
				canvas.classList.remove("active")
				canvas.classList.add("disactive")
			}
		})

	}	

	graphics.forEach((graphic, index) => {
		graphic.addEventListener("click", () => {
			removeActive();
			newActive(graphic)
			changeDisplayGraphic(index)
		})
	})

	changeCountry.addEventListener("click", ()=> {
		if(countryList.classList[0] === "changeActive"){
			chevron.classList= "fas fa-chevron-down"
			countryList.classList.remove("changeActive")
			countryList.classList.add("changeDisactive")
		} else {
			chevron.classList= "fas fa-chevron-up"
			countryList.classList.remove("changeDisactive")
			countryList.classList.add("changeActive")
		}
	})

	countrySelectors.forEach((country) => {

		country.addEventListener("click", () => {

			fetch(`/change-country?country=${country.id}`, {
  				method: 'GET' // or 'PUT'
			})
			.then(response => response.json())
			.then(result => {
				updateData(result.countryData)
				chevron.classList= "fas fa-chevron-down"
				countryList.classList.remove("changeActive")
				countryList.classList.add("changeDisactive")
				updatePieChart(result.countryData);
				updateLineChart(result.monthData);
				updateSpecificChart(myDeathsChart, result.monthData.deathsList)
				updateSpecificChart(myRecoveredChart, result.monthData.recoveredList)
				updateSpecificChart(myConfirmedChart, result.monthData.confirmedList)
				
			})
			.catch(error => {
				console.error('Error:', error);
			});
		})
	})

</script>
</body>
</html>